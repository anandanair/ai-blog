-- Define the comments table
CREATE TABLE public.comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  post_slug TEXT NOT NULL REFERENCES public.posts(slug),
  author_name TEXT NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL,
  parent_comment_id BIGINT NULL REFERENCES public.comments(id)
);

-- Add an index to post_slug for faster lookups
CREATE INDEX idx_comments_post_slug ON public.comments(post_slug);

-- Enable Row Level Security (RLS) on the comments table
ALTER TABLE public.comments ENABLE ROW LEVEL SECURITY;

-- Policy: Allow public read access to all comments
CREATE POLICY "Allow public read access" ON public.comments
  FOR SELECT USING (true);

-- Policy: Allow authenticated users to insert comments
CREATE POLICY "Allow authenticated users to insert" ON public.comments
  FOR INSERT TO authenticated WITH CHECK (true);

-- Optional: If you want to allow anonymous comments (users who are not logged in)
-- CREATE POLICY "Allow anonymous users to insert" ON public.comments
--   FOR INSERT TO anon WITH CHECK (true);

-- Grant usage on the schema and select/insert permissions on the table to the service_role
-- This is typically needed for Supabase to interact with the table
GRANT USAGE ON SCHEMA public TO service_role;
GRANT SELECT, INSERT ON TABLE public.comments TO service_role;

-- If you are using the anon key for public access, you might need to grant it permissions too
GRANT SELECT ON TABLE public.comments TO anon;
-- GRANT INSERT ON TABLE public.comments TO anon; -- If allowing anonymous inserts
